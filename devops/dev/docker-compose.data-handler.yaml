version: '3.8'

networks:
  data_handler_network:
    driver: bridge

services:
  backend:
    build:
      context: ../../apps
      dockerfile: data_handler/Dockerfile
    restart: always
    volumes:
      - ../../apps/:/app
    env_file:
      - ../../apps/data_handler/.env.dev
    environment:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: password
    ports:
      - "8000:8000"
    expose:
      - "8000"
    networks:
      - data_handler_network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    container_name: postgres_dev
    env_file:
      - ../../apps/data_handler/.env.dev
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "postgres"
      DB_HOST: "db"
      DB_PORT: "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - data_handler_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  celery:
    build:
      context: ../../apps
      dockerfile: data_handler/Dockerfile.celery_worker
    env_file:
      - ../../apps/data_handler/.env.dev
    environment:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: password
    volumes:
      - ../../apps:/app
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - data_handler_network

  celery_beat:
    build:
      context: ../../apps
      dockerfile: data_handler/Dockerfile.celery_beat
    env_file:
      - ../../apps/data_handler/.env.dev
    environment:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: password
    volumes:
      - ../../apps:/app
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - data_handler_network

  redis:
    image: redis:latest
    restart: always
    ports:
      - "127.0.0.1:6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - data_handler_network

volumes:
  postgres_data:
  redis_data:
